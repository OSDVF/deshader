# Copyright (C) 2024  Ond≈ôej Sabela
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# Creates package artifacts for Ubuntu, Arch, Windows and MacOS when a tag is pushed

# To skip building for a specific platform, add "skip linux" or "skip windows" to the commit message.

name: packages
on:
  - push
  - workflow_dispatch

jobs:
  ubuntu-mutli:
    strategy:
        matrix:
            os: [ubuntu-20.04, ubuntu-24.04]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15 # Usually runs for 6.5 minutes
    if: ${{ (github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')) && !contains(github.event.head_commit.message, 'skip linux') }}
    steps:
      - uses: actions/checkout@v4
        with:
            repository: 'osdvf/deshader-build'

      - uses: mlugg/setup-zig@v1
        with:
            version: 0.13.0

      - uses: oven-sh/setup-bun@v1
        with:
            bun-version: latest

      - name: Install Makedeb
        run: bash -c "$(wget -qO - 'https://shlink.makedeb.org/install')"
        env: 
            TERM: xterm-256color
            MAKEDEB_RELEASE: makedeb

      - name: Build for Ubuntu
        id: build-ubuntu
        run: bash makedeb.bash

      - name: Archive distribution package
        uses: actions/upload-artifact@v4
        with:
          name: deshader-${{ matrix.os }}
          path: deshader-git-*.deb

  ubuntu-arch-win:
    runs-on: ubuntu-22.04 # Wine works weird on 24.04
    timeout-minutes: 25 # Usually runs for 20 minutes
    if: ${{ (github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')) && !(contains(github.event.head_commit.message, 'skip linux') && contains(github.event.head_commit.message, 'skip windows')) }}
    steps:
      - uses: actions/checkout@v4
        with:
            repository: 'osdvf/deshader-build'

      - uses: mlugg/setup-zig@v1
        with:
            version: 0.13.0

      - uses: oven-sh/setup-bun@v1
        with:
            bun-version: latest

      - name: Build for Arch
        if: ${{ !contains(github.event.head_commit.message, 'skip linux') }}
        id: build-arch
        run: docker run -e EXPORT_PKG=true -e CHECKSUM_SRC=true -e PGPKEY="$PGP_KEY" -v "$(pwd):/pkg" ghcr.io/zaggash/arch-makepkg:latest
        continue-on-error: true

      - name: Archive Arch package
        uses: actions/upload-artifact@v4
        continue-on-error: true
        if: steps.build-arch.conclusion == 'success'
        with:
          name: deshader-arch
          path: deshader-git-*.tar.zst

      - name: Remove cloned source # as it is incompatible between makepkg and makedeb
        if: ${{ !contains(github.event.head_commit.message, 'skip linux') }}
        run: rm -rf deshader

      - name: Install Makedeb
        if: ${{ !contains(github.event.head_commit.message, 'skip linux') }}
        run: bash -c "$(wget -qO - 'https://shlink.makedeb.org/install')"
        env: 
            TERM: xterm-256color
            MAKEDEB_RELEASE: makedeb

      - name: Build for Ubuntu
        if: ${{ !contains(github.event.head_commit.message, 'skip linux') }}
        id: build-ubuntu
        run: bash makedeb.bash
        continue-on-error: true

      - name: Archive ubuntu package
        uses: actions/upload-artifact@v4
        continue-on-error: true
        if: steps.build-ubuntu.conclusion == 'success'
        with:
          name: deshader-ubuntu-22.04
          path: deshader-git-*.deb

      - name: Install Wine
        id: install-wine
        if: ${{ !contains(github.event.head_commit.message, 'skip windows') }}
        run: sudo dpkg --add-architecture i386 && sudo apt-get update && sudo apt-get install -y wine32 wine64 wine-binfmt
        continue-on-error: true

      - name: Uninstall Mono
        if: steps.install-wine.conclusion == 'success'
        run: sudo apt-get remove -y mono-devel mono-complete mono-runtime
        continue-on-error: true


      - name: Alias wine64 to wine
        if: steps.install-wine.conclusion == 'success'
        run: sudo ln -s /usr/bin/wine /usr/bin/wine64
        continue-on-error: true

      - name: Fix permissions
        run: sudo chmod -R 777 src/deshader
        continue-on-error: true

      - name: Make src/deshader exist
        run: mkdir src && git clone --recurse-submodules https://github.com/OSDVF/deshader src/deshader
        continue-on-error: true

      - name: Cross-compile for Windows
        id: win-compile
        if: steps.install-wine.conclusion == 'success'
        run: for a in 1 2; do zig build deshader launcher -fwine -Dtarget=x86_64-windows-gnu --release=safe; done || bash fix_c_import.sh && zig build deshader launcher generate_headers generate_stubs -fwine -Dtarget=x86_64-windows-gnu --release=safe
        shell: bash
        working-directory: src/deshader
        continue-on-error: true

      - name: Test windows build
        if: steps.win-compile.conclusion == 'success'
        run: wine deshader-run.exe -version
        working-directory: src/deshader/zig-out/bin
        continue-on-error: true

      - name: Remove header generator binary
        run: rm -f src/deshader/zig-out/bin/generate_headers
        continue-on-error: true

      - name: Compress windows executables
        id: windows-zip
        if: steps.win-compile.conclusion == 'success'
        run: zip -rj deshader-git-windows-${{ github.ref_name }}.zip bin
        working-directory: src/deshader/zig-out
        continue-on-error: true

      - name: Add headers to archive
        if: ${{ steps.windows-zip.conclusion == 'success' }}
        run: zip -r deshader-git-windows-${{ github.ref_name }}.zip include
        working-directory: src/deshader/zig-out
        continue-on-error: true

      - name: Archive Windows package
        uses: actions/upload-artifact@v4
        continue-on-error: true
        if: steps.windows-zip.conclusion == 'success'
        with:
          name: deshader-windows
          path: src/deshader/zig-out/deshader-git-windows*.zip

  mac-os:
    strategy:
        matrix:
            os: [macos-13, macos-14]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    if: ${{ (github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')) && !contains(github.event.head_commit.message, 'skip macos') }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'osdvf/deshader-build'

      - uses: mlugg/setup-zig@v1
        with:
            version: 0.13.0

      - uses: oven-sh/setup-bun@v1
        with:
            bun-version: latest

      - uses: lukka/get-cmake@latest

      - name: Download VCPKG
        run: git clone https://github.com/Microsoft/vcpkg
      
      - name: Install VCPKG
        run: ./vcpkg/bootstrap-vcpkg.sh

      - name: Build for macOS
        run: PATH="./vcpkg/:$PATH" bash makeapp.bash

      - name: Hydrate certificate
        env:
          CERTIFICATE: ${{ secrets.CERT_P12 }}
        run: |
          base64 -d <<< $CERTIFICATE > cert.p12

      - name: Sign the bundle
        env:
          KEYCHAIN: build.keychain
          KEYCHAIN_PASSWORD: deshader
          CERT_FILE: cert.p12
          CERT_PASSWORD: ${{ secrets.CERT_PASSWORD }}
          CERT: ${{ secrets.CERT }}
        run: |
          security create-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN
          security list-keychains -s $KEYCHAIN
          security set-keychain-settings -t 3600 -l $KEYCHAIN
          security unlock-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN
          bash makeapp.bash sign

      - name: Get architecture
        run: echo "arch=$(uname -m)" >> $GITHUB_OUTPUT
        id: arch

      - name: Compress the archive
        run: zip -r deshader-git-${{ matrix.os }}-${{ steps.arch.outputs.arch }}-${{ github.ref_name }}.zip Deshader.app

      - name: Archive macOS package
        uses: actions/upload-artifact@v4
        with:
          name: deshader-${{ matrix.os }}
          path: deshader-git-macos*.zip