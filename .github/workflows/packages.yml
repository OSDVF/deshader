# Copyright (C) 2024  Ond≈ôej Sabela
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# Creates a release when a tag is pushed
# The release will have the tag name as the title.
# The tag description will be used as the body, concatenated with the commit message.
# If tag description contains the text "Release", the release will be marked as a stable release.
# The release will contain the following files:
# - deshader-git_*.deb
# - deshader-git-*.tar.zst
# - deshader-git-windows-*.zip

# To skip building for a specific platform, add "skip linux" or "skip windows" to the commit message.

name: packages
on: push

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
        with:
            repository: 'osdvf/deshader-build'

      - uses: mlugg/setup-zig@v1
        with:
            version: 0.13.0

      - uses: oven-sh/setup-bun@v1
        with:
            bun-version: latest

      - name: Build for Arch
        if: ${{ !contains(github.event.head_commit.message, 'skip linux') }}
        id: build-arch
        run: docker run -e EXPORT_PKG=true -e CHECKSUM_SRC=true -e PGPKEY="$PGP_KEY" -v "$(pwd):/pkg" ghcr.io/zaggash/arch-makepkg:latest
        continue-on-error: true

      - name: Remove cloned source # as it is incompatible between makepkg and makedeb
        if: ${{ !contains(github.event.head_commit.message, 'skip linux') }}
        run: rm -rf deshader

      - name: Install Makedeb
        if: ${{ !contains(github.event.head_commit.message, 'skip linux') }}
        run: bash -c "$(wget -qO - 'https://shlink.makedeb.org/install')"
        env: 
            TERM: xterm-256color
            MAKEDEB_RELEASE: makedeb

      - name: Build for Ubuntu
        if: ${{ !contains(github.event.head_commit.message, 'skip linux') }}
        id: build-ubuntu
        run: bash makedeb.bash
        continue-on-error: true

      - name: Install Wine
        if: ${{ !contains(github.event.head_commit.message, 'skip windows') }}
        run: sudo dpkg --add-architecture i386 && sudo apt-get update && sudo apt-get install -y wine32 wine64 wine-binfmt

      - name: Uninstall Mono
        if: ${{ !contains(github.event.head_commit.message, 'skip windows') }}
        run: sudo apt-get remove -y mono-devel mono-complete mono-runtime
        continue-on-error: true

      - name: Fix permissions
        run: sudo chmod -R 777 src/deshader
        continue-on-error: true

      - name: Make src/deshader exist
        run: mkdir src && git clone --recurse-submodules https://github.com/OSDVF/deshader src/deshader
        continue-on-error: true

      - name: Cross-compile for Windows
        if: ${{ success() && !contains(github.event.head_commit.message, 'skip windows') }}
        run: for a in 1 2; do zig build deshader launcher -fwine -Dtarget=x86_64-windows-gnu --release=safe; done || bash fix_c_import.sh && zig build deshader launcher generate_headers generate_stubs -fwine -Dtarget=x86_64-windows-gnu --release=safe
        shell: bash
        working-directory: src/deshader
        continue-on-error: true

      - name: Test windows build
        if: ${{ success() && !contains(github.event.head_commit.message, 'skip windows') }}
        run: wine deshader-run.exe -version
        working-directory: src/deshader/zig-out/bin

      - name: Create windows ZIP
        id: windows-zip
        if: ${{ success() && !contains(github.event.head_commit.message, 'skip windows') }}
        run: zip -rj deshader-git-windows-${{ github.ref_name }}.zip bin
        working-directory: src/deshader/zig-out
        continue-on-error: true

      - name: Add headers to ZIP
        if: ${{ steps.windows-zip.conclusion == 'success' }}
        run: zip -r deshader-git-windows-${{ github.ref_name }}.zip include lib
        working-directory: src/deshader/zig-out
        continue-on-error: true

      - name: Get tag description
        id: tag-desc
        run: echo "desc=`git tag -l --format='%(contents:subject)' $(git describe --tags --abbrev=0)`" >> $GITHUB_OUTPUT

      - name: Create a Release
        if: ${{ steps.build-ubuntu.conclusion == 'success' || steps.build-arch.conclusion == 'success' || steps.windows-zip.conclusion == 'success' }}
        uses: softprops/action-gh-release@v2
        with:
            prerelease: ${{ !contains(steps.tag-desc.outputs.desc, 'Release') }}
            body: "${{ steps.tag-desc.outputs.desc }}\n${{ github.event.head_commit.message }}"
            files: |
                ${{ steps.build-ubuntu.conclusion == 'success' && 'deshader-git_*.deb'}} 
                ${{ steps.build-arch.conclusion == 'success' && 'deshader-git-*.tar.zst'}}
                ${{ steps.windows-zip.conclusion == 'success' && format('src/deshader/zig-out/deshader-git-windows-{0}.zip', github.ref_name) }}